// for 8.1 i used the following links: https://xlinux.nist.gov/dads/HTML/queue.html
// https://www.doc.ic.ac.uk/~ar3/lectures/ProgrammingII/LargePrintOut/Lecture5PrintOut.pdf
// https://xlinux.nist.gov/dads/HTML/stack.html
8.1
Type QUEUE[T]

Functions
mt_queue: QUEUE[T]                  // constructor
enqueue: T X QUEUE[T] -> QUEUE[T]   // constructor
dequeue: QUEUE[T] ⇸ QUEUE[T]       // selector
head: QUEUE[T] ⇸ T                 // selector
empty: QUEUE[T] -> Bool             // predicate

Preconditions
∀ q : QUEUE[T] •
pre(dequeue(q)) ⇔ empty(q) = false
pre(head(q)) ⇔ empty(q) = false

Axioms
∀ x, y : T; q : QUEUE[T] •
dequeue(enqueue(x, mt_queue)) = mt_queue
dequeue(enqueue(x, enqueue(y, q))) = enqueue(x, dequeue(enqueue(y, q)))
head(enqueue(x, mt_queue)) = x
head(enqueue(x, enqueue(y, q))) = head(enqueue(y, q))
empty(mt_queue) = true
empty(enqueue(x, q)) = false


8.3
Bubble Sort:
start a: [3, 1, 6, 7, 2, 5, 4]
1. loop: [1, 3, 6, 2, 5, 4, 7]
2. loop: [1, 3, 2, 5, 4, 6, 7]
3. loop: [1, 2, 3, 4, 5, 6, 7]
4. loop: [1, 2, 3, 4, 5, 6, 7]

Insertion Sort:
start a: [3, 1, 6, 7, 2, 5, 4]
1. loop: [1, 3, 6, 7, 2, 5, 4]
2. loop: [1, 3, 6, 7, 2, 5, 4]
3. loop: [1, 3, 6, 7, 2, 5, 4]
4. loop: [1, 2, 3, 6, 7, 5, 4]
5. loop: [1, 2, 3, 5, 6, 7, 4]
6. loop: [1, 2, 3, 4, 5, 6, 7]

Selection Sort:
start a: [3, 1, 6, 7, 2, 5, 4]
1. loop: [1, 3, 6, 7, 2, 5, 4]
2. loop: [1, 2, 6, 7, 3, 5, 4]
3. loop: [1, 2, 3, 7, 6, 5, 4]
4. loop: [1, 2, 3, 4, 6, 5, 7]
5. loop: [1, 2, 3, 4, 5, 6, 7]
6. loop: [1, 2, 3, 4, 5, 6, 7]
